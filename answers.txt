Какие три основные области работы с файлами в Git (рабочая папка, индекс, репозиторий) и чем они отличаются?
Ответ:

Рабочая папка (Working Directory) — это текущая версия файлов на вашем компьютере, где вы вносите изменения.

Индекс (Staging Area) — промежуточная область, куда добавляются файлы перед коммитом. Здесь вы подготавливаете изменения, которые будут сохранены в репозитории.

Репозиторий (Repository) — хранилище Git с историей всех коммитов и версиями файлов. После коммита изменения из индекса сохраняются здесь.

Что происходит при выполнении команд git add, git commit, git push?
Ответ:

git add — добавляет изменения из рабочей папки в индекс (staging area) для подготовки к коммиту.

git commit — сохраняет изменения из индекса в локальный репозиторий, создавая новый коммит с уникальным хешем.

git push — отправляет коммиты из локального репозитория в удалённый репозиторий (например, на GitHub).

Почему важно писать информативные сообщения к коммитам, а не просто исправление или update?
Ответ: Информативные сообщения помогают понять историю изменений без просмотра кода. Они упрощают collaboration, отладку и поиск нужных коммитов. Например, сообщение Исправлена ошибка валидации email яснее, чем исправление.

Чем отличается git add имя_файла от git add .? В каких случаях лучше использовать каждый вариант?
Ответ:

git add имя_файла — добавляет в индекс только указанный файл. Полезно, когда нужно коммитить отдельные изменения.

git add . — добавляет все новые и изменённые файлы из текущей папки. Удобно для массового добавления, но может захватить лишнее.

Что показывает команда git status и как меняется ее вывод на разных этапах работы?
Ответ: git status показывает состояние рабочей папки и индекса:

Если файлы изменены, но не добавлены в индекс — они отображаются как не отслеживаемые или изменённые.

После git add файлы помечаются как готовые к коммиту.

После git commit вывод становится чистым (нет изменений).

Для чего нужна команда git remote add origin URL и что означает слово origin?
Ответ: Эта команда связывает локальный репозиторий с удалённым репозиторием по указанному URL. Origin — это стандартное имя для удалённого репозитория (можно использовать другое, но origin принято по умолчанию).

Зачем нужен флаг -u в команде git push -u origin main при первой отправке изменений?
Ответ: Флаг -u (или --set-upstream) связывает текущую локальную ветку (например, main) с удалённой веткой origin/main. После этого можно использовать git push без указания ветки, так как Git запомнит связь.

Что такое ветка (branch) по умолчанию и какая у вас создалась (main или master)? Почему это важно?
Ответ: Ветка по умолчанию — это основная ветка в репозитории, где ведётся разработка. Раньше использовалось имя master, но сейчас чаще создаётся main из-за инициатив по инклюзивности. Это важно, такую ветку обычно защищают и используют для стабильной версии проекта.

Как просмотреть историю коммитов и какую информацию о каждом коммите вы видите?
Ответ: История просматривается через git log. Для каждого коммита показывается:

Хеш (уникальный идентификатор).

Автор и дата.

Сообщение коммита.
Дополнительно можно использовать git log --oneline для компактного вывода.

Что произойдет, если сделать изменения в файле, но не выполнить git add перед git commit?
Ответ: Изменения не попадут в коммит, так как git commit сохраняет только то, что было добавлено в индекс через git add. Git предупредит, что нет изменений для коммита.
